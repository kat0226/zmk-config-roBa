#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W                  &kp E             &kp R                   &kp T                                                        &kp Y     &kp U  &lt 3 I    &kp O    &kp P
&kp A                 &kp S                  &kp D             &kp F                   &kp G        &kp C_SNAPSHOT                      &kp DELETE  &kp H     &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z                 &kp X                  &kp C             &kp V                   &kp B        &kp LEFT_SHIFT                      &kp ENTER   &kp N     &kp M  &kp COMMA  &kp DOT  &kp SQT
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_COMMAND  &lt_to_layer_0 2 SPACE  &lt 1 LANG7  &lt_to_layer_0 0 LANG_HIRAGANA      &mkp MB1    &mkp MB2                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp ASTERISK                &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp PLUS                       &kp F1  &kp F2   &kp F3   &kp F4   &trans
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &trans      &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_N7        &kp KP_N8        &kp KP_N9        &kp EQUAL  &trans      &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans                      &trans           &trans           &trans           &trans     &trans      &trans  &trans                             &trans
            >;
        };

        Symbol {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &kp EXCLAMATION  &kp AT_SIGN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &kp UP    &kp QUESTION     &kp POUND      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &trans  &trans  &trans  &trans  &kp GRAVE      &kp DOWN  &kp CARET        &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &trans  &trans  &trans  &trans  &trans         &kp LEFT  &kp RIGHT_ARROW                                                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
