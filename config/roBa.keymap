#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp E            &kp R                          &kp T                                                               &kp Y      &kp U                &kp I      &kp O    &kp P
&kp A           &kp S           &kp D            &kp F                          &kp G        &mkp MB2                            &kp RIGHT_COMMAND  &kp H      &mt RIGHT_CONTROL J  &kp K      &kp L    &kp SEMICOLON
&kp Z           &kp X           &kp C            &kp V                          &kp B        &mkp MB1                            &kp MINUS          &kp N      &kp M                &kp COMMA  &kp DOT  &kp SQT
&kp LEFT_SHIFT  &kp LEFT_ARROW  &kp RIGHT_ARROW  &lt_to_layer_0 1 LEFT_COMMAND  &lt 2 SPACE  &lt_to_layer_0 3 RIGHT_COMMAND      &kp BACKSPACE      &kp ENTER                                           &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        NUM {
            bindings = <
&kp ASTERISK     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS                                         &kp EXCLAMATION  &kp AT_SIGN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &kp K_MUTE            &kp UP_ARROW    &kp QUESTION     &kp HASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&kp KP_NUMBER_0  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp EQUAL  &kp LEFT_CONTROL      &kp DOWN_ARROW  &kp UNDERSCORE   &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans           &trans           &trans           &trans           &trans     &trans                &kp LEFT_ARROW  &kp RIGHT_ARROW                                                              &trans
            >;
        };

        symbol {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                                                                &kp EXCLAMATION  &kp AT_SIGN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans        &trans        &trans        &kp C_AC_HOME  &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &kp ESCAPE            &kp UP_ARROW    &kp QUESTION     &kp HASH       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans        &trans        &trans        &kp F12        &kp LEFT_COMMAND                      &kp LEFT_CONTROL      &kp DOWN_ARROW  &kp UNDER        &kp AMPERSAND  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans        &trans        &trans        &trans         &trans                                &trans                &kp LEFT        &kp RIGHT                                                                    &kp TAB
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
